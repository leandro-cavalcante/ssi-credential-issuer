# A workflow for container image build, scan, and deployment on PreProd
name: "CFX [PreProd] Build, scan and deploy"

on:
  workflow_dispatch:
  push:
    tags:
      - '^[0-9]+\.[0-9]+\.[0-9]+-cfx-[0-9]+-rc\.[0-9]+$'
      - '^[0-9]+\.[0-9]+\.[0-9]+-cfx-[0-9]+$'

jobs:  # For Container image build, Trivy scan, and image push
  dockerizing-application:
    permissions:
      contents: read
      actions: read
      security-events: write
      id-token: write

    strategy:
      matrix:
        include:
          - service_name: ssi-credential-issuer-service
            dockerfile: docker/Dockerfile-credential-issuer-service
          - service_name: ssi-credential-issuer-migrations
            dockerfile: docker/Dockerfile-credential-issuer-migrations
          - service_name: ssi-credential-issuer-processes-worker
            dockerfile: docker/Dockerfile-credential-issuer-processes-worker
          - service_name: ssi-credential-expiry-app
            dockerfile: docker/Dockerfile-credential-expiry-app

    name: Docker build, Trivy scan, Docker push
    uses: Cofinity-X/central-pipelines/.github/workflows/reusable-publish-image-to-acr.yaml@main
    with:
      team_name: core-services
      repository_name: ssi-issuer
      service_name: ${{ matrix.service_name }}
      dockerfile_path: ${{ matrix.dockerfile }}
      environment: "lower-env-acr"
      push: true
    secrets:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}


  # To dispatch a workflow in core-services-charts repo for auto image tag update. The following job could be developed as reusable workflow in the future.
  auto-deploy-dispatch:
    needs: dockerizing-application
    name: Dispatch charts repo workflow
    environment: preprod
    runs-on: ubuntu-latest
    steps:
      # Get image tags from the previous job. Filter the tag that needs to be updated
      - name: Get image tags
        id: get_tag
        run: |
          release_tag_rc_regex="^[0-9]+\.[0-9]+\.[0-9]+-cfx-[0-9]+(-rc\.[0-9]+)?$"
          release_tag_regex="^[0-9]+\.[0-9]+\.[0-9]+-cfx-[0-9]+$"
          echo "Starting to process image tags..."
          release_tag=false
          for image_tag in $(echo "${{ needs.dockerizing-application.outputs.image_tags }}")
          do
            image_tag=$(echo $image_tag | cut -d ":" -f2)
            if [[ $image_tag =~ $release_tag_rc_regex ]]; then
              release_tag=$image_tag
              echo "Tag '$image_tag' matches the regex '$release_tag_rc_regex'"
            elif [[ $image_tag =~ $release_tag_regex ]]; then
              release_tag=$image_tag
              echo "Tag '$image_tag' matches the regex '$release_tag_regex'"
            fi
          done
          echo "release_tag=$release_tag" >> $GITHUB_OUTPUT
      # Generate a temporary token using Github app
      - name: Get token
        id: get_token
        if: ${{ steps.get_tag.outputs.release_tag }}
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.CORE_SERVICES_WORKFLOW_TRIGGER_GH_APP_ID }}
          private-key: ${{ secrets.CORE_SERVICES_WORKFLOW_TRIGGER_GH_APP_PRIVATE_KEY }}
          repositories: core-services-charts
          owner: cofinity-x

      # Trigger remote workflow of core-services-chart to update the image tag in the helm values
      - name: Trigger workflow
        id: trigger_remote_workflow
        if: ${{ steps.get_tag.outputs.release_tag }}
        env:
          TOKEN: ${{ steps.get_token.outputs.token }}
          HELM_VALUES_PATH: "ssi-credential-issuer/preprod/values.yaml"
          IMAGE_TAG: ${{ steps.get_tag.outputs.release_tag }}
          IMAGE_TAG_PROPERTY: '(.ssi-credential-issuer.[\"service\", \"migrations\", \"credentialExpiry\", \"processesworker\"].image.tag)'
          GITHUB_RUN_ID: ${{ github.run_id }}
        run: |
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/cofinity-x/core-services-charts/dispatches \
            -d '{"event_type":"update_dev_image_tag","client_payload": { "image_tag": "'"$IMAGE_TAG"'", "helm_values_path": "'"$HELM_VALUES_PATH"'", "image_tag_property": "'"$IMAGE_TAG_PROPERTY"'", "dispatcher_info": "'"Runner id - $GITHUB_RUN_ID"'" }}' \
            --fail